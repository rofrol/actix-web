var searchIndex = {};
searchIndex["actix_web"] = {"doc":"Actix web is a small, fast, pragmatic, open source rust web framework.","items":[[3,"Method","actix_web","The Request Method (VERB)",null,null],[3,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[3,"Version","","Represents a version of the HTTP spec.",null,null],[3,"Json","","Json response helper",null,null],[12,"0","","",0,null],[3,"Application","","Structure that follows the builder pattern for building `Application` structs.",null,null],[3,"HttpRequest","","An HTTP Request",null,null],[3,"HttpResponse","","An HTTP Response",null,null],[3,"Reply","","Represents response process.",null,null],[3,"NormalizePath","","Path normalization helper",null,null],[3,"Route","","Resource route definition",null,null],[3,"Resource","","Resource is an entry in route table which corresponds to requested URL.",null,null],[3,"HttpContext","","Http actor execution context",null,null],[3,"HttpServer","","An HTTP Server",null,null],[4,"Body","","Represents various types of http message body.",null,null],[13,"Empty","","Empty response. `Content-Length` header is set to `0`",1,null],[13,"Binary","","Specific response body.",1,null],[13,"Streaming","","Unspecified streaming response. Developer is responsible for setting right `Content-Length` or `Transfer-Encoding` headers.",1,null],[13,"Actor","","Special body type for actor response.",1,null],[4,"Binary","","Represents various types of binary body. `Content-Length` header is set to length of the body.",null,null],[13,"Bytes","","Bytes body",2,null],[13,"Slice","","Static slice",2,null],[13,"SharedString","","Shared string body",2,null],[11,"new","","Create application with empty state. Application can be configured with builder-like pattern.",3,{"inputs":[],"output":{"name":"application"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"self"}}],[11,"with_state","","Create application with specific state. Application can be configured with builder-like pattern.",3,{"inputs":[{"name":"s"}],"output":{"name":"application"}}],[11,"prefix","","Set application prefix",3,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"application"}}],[11,"resource","","Configure resource for specific path.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f"}],"output":{"name":"application"}}],[11,"default_resource","","Default resource is used if no matched route could be found.",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"application"}}],[11,"default_encoding","","Set default content encoding. `ContentEncoding::Auto` is set by default.",3,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"application"}}],[11,"external_resource","","Register external resource.",3,{"inputs":[{"name":"self"},{"name":"t"},{"name":"u"}],"output":{"name":"application"}}],[11,"handler","","Configure handler for specific path prefix.",3,{"inputs":[{"name":"self"},{"name":"str"},{"name":"h"}],"output":{"name":"application"}}],[11,"middleware","","Register a middleware",3,{"inputs":[{"name":"self"},{"name":"m"}],"output":{"name":"application"}}],[11,"finish","","Finish application configuration and create HttpHandler object",3,{"inputs":[{"name":"self"}],"output":{"name":"httpapplication"}}],[11,"boxed","","Convenience method for creating `Box<HttpHandler>` instance.",3,{"inputs":[{"name":"self"}],"output":{"generics":["httphandler"],"name":"box"}}],[11,"into_handler","","",3,{"inputs":[{"name":"self"},{"name":"serversettings"}],"output":{"name":"httpapplication"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"is_streaming","","Does this body streaming.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_binary","","Is this binary body.",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_slice","","Create body from slice (copy)",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"body"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"t"}],"output":{"name":"body"}}],[11,"from","","",1,{"inputs":[{"generics":["actorhttpcontext"],"name":"box"}],"output":{"name":"body"}}],[11,"is_empty","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"from_slice","","Create binary body from slice",2,null],[11,"take","","Convert Binary to a Bytes instance",2,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"binary"}}],[11,"into","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"binary"}}],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"generics":["u8"],"name":"vec"}],"output":{"name":"binary"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"binary"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"binary"}}],[11,"from","","",2,{"inputs":[{"name":"bytes"}],"output":{"name":"binary"}}],[11,"from","","",2,{"inputs":[{"name":"bytesmut"}],"output":{"name":"binary"}}],[11,"from","","",2,{"inputs":[{"generics":["string"],"name":"rc"}],"output":{"name":"binary"}}],[11,"from","","",2,{"inputs":[{"name":"rc"}],"output":{"name":"binary"}}],[11,"from","","",2,{"inputs":[{"generics":["string"],"name":"arc"}],"output":{"name":"binary"}}],[11,"from","","",2,{"inputs":[{"name":"arc"}],"output":{"name":"binary"}}],[11,"as_ref","","",2,null],[11,"stop","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"terminate","","",4,{"inputs":[{"name":"self"}],"output":null}],[11,"state","","",4,{"inputs":[{"name":"self"}],"output":{"name":"actorstate"}}],[11,"spawn","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"spawnhandle"}}],[11,"wait","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"cancel_future","","",4,{"inputs":[{"name":"self"},{"name":"spawnhandle"}],"output":{"name":"bool"}}],[11,"new","","",4,{"inputs":[{"name":"httprequest"},{"name":"a"}],"output":{"name":"httpcontext"}}],[11,"from_request","","",4,{"inputs":[{"name":"httprequest"}],"output":{"name":"httpcontext"}}],[11,"actor","","",4,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"httpcontext"}}],[11,"state","","Shared application state",4,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"request","","Incoming request",4,{"inputs":[{"name":"self"}],"output":{"name":"httprequest"}}],[11,"write","","Write payload",4,{"inputs":[{"name":"self"},{"name":"b"}],"output":null}],[11,"write_eof","","Indicate end of streaming payload. Also this method calls `Self::close`.",4,{"inputs":[{"name":"self"}],"output":null}],[11,"drain","","Returns drain future",4,{"inputs":[{"name":"self"}],"output":{"name":"drain"}}],[11,"connected","","Check if connection still open",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"handle","","Handle of the running future",4,{"inputs":[{"name":"self"}],"output":{"name":"spawnhandle"}}],[11,"pack","","",4,{"inputs":[{"name":"m"},{"generics":["sender"],"name":"option"}],"output":{"name":"syncenvelope"}}],[11,"from","","",1,{"inputs":[{"name":"httpcontext"}],"output":{"name":"body"}}],[11,"new","","Construct a new Request.",5,{"inputs":[{"name":"method"},{"name":"uri"},{"name":"version"},{"name":"headermap"},{"generics":["payload"],"name":"option"}],"output":{"name":"httprequest"}}],[11,"with_state","","Construct new http request with state.",5,{"inputs":[{"name":"self"},{"name":"rc"},{"name":"router"}],"output":{"name":"httprequest"}}],[11,"change_state","","Construct new http request with state.",5,{"inputs":[{"name":"self"},{"name":"rc"}],"output":{"name":"httprequest"}}],[11,"state","","Shared application state",5,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"extensions","","Protocol extensions.",5,{"inputs":[{"name":"self"}],"output":{"name":"extensions"}}],[11,"uri","","Read the Request Uri.",5,{"inputs":[{"name":"self"}],"output":{"name":"uri"}}],[11,"method","","Read the Request method.",5,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"version","","Read the Request Version.",5,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"headers","","Read the Request Headers.",5,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"path","","The target path of this Request.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"connection_info","","Get ConnectionInfo for correct request.",5,{"inputs":[{"name":"self"}],"output":{"name":"connectioninfo"}}],[11,"url_for","","Generate url for named resource",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u"}],"output":{"generics":["url","urlgenerationerror"],"name":"result"}}],[11,"router","","This method returns reference to current `Router` object.",5,{"inputs":[{"name":"self"}],"output":{"generics":["router"],"name":"option"}}],[11,"peer_addr","","Peer socket address",5,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"option"}}],[11,"query","","Get a reference to the Params object. Params is a container for url query parameters.",5,{"inputs":[{"name":"self"}],"output":{"name":"params"}}],[11,"query_string","","The query string in the URL.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cookies","","Load request cookies.",5,{"inputs":[{"name":"self"}],"output":{"generics":["vec","cookieparseerror"],"name":"result"}}],[11,"cookie","","Return request cookie.",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["cookie"],"name":"option"}}],[11,"match_info","","Get a reference to the Params object. Params is a container for url parameters. Route supports glob patterns: * for a single wildcard segment and :param for matching storing that segment of the request url in the Params object.",5,{"inputs":[{"name":"self"}],"output":{"name":"params"}}],[11,"keep_alive","","Checks if a connection should be kept alive.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"content_type","","Read the request content type. If request does not contain Content-Type header, empty str get returned.",5,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"mime_type","","Convert the request content type to a known mime type.",5,{"inputs":[{"name":"self"}],"output":{"generics":["mime"],"name":"option"}}],[11,"chunked","","Check if request has chunked transfer encoding",5,{"inputs":[{"name":"self"}],"output":{"generics":["bool","parseerror"],"name":"result"}}],[11,"range","","Parses Range HTTP header string as per RFC 2616. `size` is full size of response (file).",5,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"generics":["vec","httprangeerror"],"name":"result"}}],[11,"payload","","Returns reference to the associated http payload.",5,{"inputs":[{"name":"self"}],"output":{"name":"payload"}}],[11,"payload_mut","","Returns mutable reference to the associated http payload.",5,{"inputs":[{"name":"self"}],"output":{"name":"payload"}}],[11,"body","","Load request body.",5,{"inputs":[{"name":"self"}],"output":{"name":"requestbody"}}],[11,"multipart","","Return stream to http payload processes as multipart.",5,{"inputs":[{"name":"self"}],"output":{"name":"multipart"}}],[11,"urlencoded","","Parse `application/x-www-form-urlencoded` encoded body. Return `UrlEncoded` future. It resolves to a `HashMap<String, String>` which contains decoded parameters.",5,{"inputs":[{"name":"self"}],"output":{"name":"urlencoded"}}],[11,"json","","Parse `application/json` encoded body. Return `JsonBody<T>` future. It resolves to a `T` value.",5,{"inputs":[{"name":"self"}],"output":{"name":"jsonbody"}}],[11,"default","","Construct default request",5,{"inputs":[],"output":{"name":"httprequest"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"httprequest"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"build","","Create http response builder with specific status.",6,{"inputs":[{"name":"statuscode"}],"output":{"name":"httpresponsebuilder"}}],[11,"new","","Constructs a response",6,{"inputs":[{"name":"statuscode"},{"name":"body"}],"output":{"name":"httpresponse"}}],[11,"from_error","","Constructs a error response",6,{"inputs":[{"name":"error"}],"output":{"name":"httpresponse"}}],[11,"error","","The source `error` for this response",6,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"version","","Get the HTTP version of this response",6,{"inputs":[{"name":"self"}],"output":{"generics":["version"],"name":"option"}}],[11,"headers","","Get the headers from the response",6,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"headers_mut","","Get a mutable reference to the headers",6,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"status","","Get the response status code",6,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"status_mut","","Set the `StatusCode` for this response",6,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"reason","","Get custom reason for the response",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"set_reason","","Set the custom reason for the response",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"set_connection_type","","Set connection type",6,{"inputs":[{"name":"self"},{"name":"connectiontype"}],"output":{"name":"self"}}],[11,"upgrade","","Connection upgrade status",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"keep_alive","","Keep-alive status for this connection",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"option"}}],[11,"chunked","","is chunked encoding enabled",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"option"}}],[11,"content_encoding","","Content encoding",6,{"inputs":[{"name":"self"}],"output":{"generics":["contentencoding"],"name":"option"}}],[11,"set_content_encoding","","Set content encoding",6,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"self"}}],[11,"body","","Get body os this response",6,{"inputs":[{"name":"self"}],"output":{"name":"body"}}],[11,"set_body","","Set a body",6,{"inputs":[{"name":"self"},{"name":"b"}],"output":null}],[11,"replace_body","","Set a body and return previous body value",6,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"body"}}],[11,"response_size","","Size of response in bytes, excluding HTTP headers",6,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",6,{"inputs":[{"name":"result"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"httpresponsebuilder"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",6,null],[11,"from","","",6,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bytes"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"bytesmut"}],"output":{"name":"self"}}],[11,"respond_to","","",0,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["httpresponse","error"],"name":"result"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"route"}}],[11,"p","","Add match predicate to route.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"self"}}],[11,"h","","Set handler object. Usually call to this method is last call during route configuration, because it does not return reference to self.",7,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"f","","Set handler function. Usually call to this method is last call during route configuration, because it does not return reference to self.",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"a","","Set async handler function.",7,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"name","","Set resource name",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"route","","Register a new route and return mutable reference to Route object. Route is used for route configuration, i.e. adding predicates, setting up handler.",8,{"inputs":[{"name":"self"}],"output":{"name":"route"}}],[11,"method","","Register a new route and add method check to route.",8,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"route"}}],[11,"h","","Register a new route and add handler object.",8,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"f","","Register a new route and add handler function.",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"middleware","","Register a middleware",8,{"inputs":[{"name":"self"},{"name":"m"}],"output":null}],[11,"async","","Create async response",9,{"inputs":[{"name":"f"}],"output":{"name":"reply"}}],[11,"response","","Send response",9,{"inputs":[{"name":"r"}],"output":{"name":"reply"}}],[11,"respond_to","","",9,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["reply","error"],"name":"result"}}],[11,"respond_to","","",6,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["reply","error"],"name":"result"}}],[11,"from","","",9,{"inputs":[{"name":"httpresponse"}],"output":{"name":"reply"}}],[11,"from","","",9,{"inputs":[{"generics":["reply"],"name":"result"}],"output":{"name":"self"}}],[11,"from","","",9,{"inputs":[{"generics":["httpresponse"],"name":"result"}],"output":{"name":"self"}}],[11,"from","","",9,{"inputs":[{"generics":["future"],"name":"box"}],"output":{"name":"reply"}}],[11,"default","","Create default `NormalizePath` instance, append is set to true, merge is set to true and redirect is set to `StatusCode::MOVED_PERMANENTLY`",10,{"inputs":[],"output":{"name":"normalizepath"}}],[11,"new","","Create new `NormalizePath` instance",10,{"inputs":[{"name":"bool"},{"name":"bool"},{"name":"statuscode"}],"output":{"name":"normalizepath"}}],[11,"handle","","",10,null],[0,"client","","Http client",null,null],[3,"SendRequest","actix_web::client","`SendRequest` is a `Future` which represents asynchronous request sending process.",null,null],[3,"ClientRequest","","An HTTP Client Request",null,null],[3,"ClientRequestBuilder","","An HTTP Client request builder",null,null],[3,"ClientResponse","","An HTTP Client response",null,null],[3,"ResponseBody","","Future that resolves to a complete response body.",null,null],[3,"JsonResponse","","Client response json parser that resolves to a deserialized `T` value.",null,null],[3,"UrlEncoded","","Future that resolves to a parsed urlencoded values.",null,null],[3,"Connect","","`Connect` type represents message that can be send to `ClientConnector` with connection request.",null,null],[12,"0","","",11,null],[3,"Connection","","",null,null],[3,"ClientConnector","","",null,null],[4,"SendRequestError","","A set of errors that can occur during sending request and reading response",null,null],[13,"Connector","","Failed to connect to host",12,null],[13,"ParseError","","Error parsing response",12,null],[13,"Io","","Error reading response payload",12,null],[4,"ClientConnectorError","","A set of errors that can occur during connecting to a http host",null,null],[13,"InvalidUrl","","Invalid url",13,null],[13,"SslIsNotSupported","","SSL feature is not enabled",13,null],[13,"SslError","","SSL error",13,null],[13,"Connector","","Connection error",13,null],[13,"Timeout","","Connecting took too long",13,null],[13,"Disconnected","","Connector has been disconnected",13,null],[13,"IoError","","Connection io error",13,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create `Connect` message for specified `Uri`",11,{"inputs":[{"name":"u"}],"output":{"generics":["connect","httperror"],"name":"result"}}],[11,"cause","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",13,{"inputs":[{"name":"connectorerror"}],"output":{"name":"clientconnectorerror"}}],[11,"default","","",14,{"inputs":[],"output":{"name":"clientconnector"}}],[11,"with_connector","","Create `ClientConnector` actor with custom `SslConnector` instance.",14,{"inputs":[{"name":"sslconnector"}],"output":{"name":"clientconnector"}}],[11,"handle","","",14,null],[11,"stream","","",15,{"inputs":[{"name":"self"}],"output":{"name":"iostream"}}],[11,"shutdown","","",15,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"set_nodelay","","",15,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_linger","","",15,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"read","","",15,null],[11,"write","","",15,null],[11,"flush","","",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"shutdown","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[11,"default","","",16,{"inputs":[],"output":{"name":"clientrequest"}}],[11,"get","","Create request builder for `GET` request",16,{"inputs":[{"name":"u"}],"output":{"name":"clientrequestbuilder"}}],[11,"head","","Create request builder for `HEAD` request",16,{"inputs":[{"name":"u"}],"output":{"name":"clientrequestbuilder"}}],[11,"post","","Create request builder for `POST` request",16,{"inputs":[{"name":"u"}],"output":{"name":"clientrequestbuilder"}}],[11,"put","","Create request builder for `PUT` request",16,{"inputs":[{"name":"u"}],"output":{"name":"clientrequestbuilder"}}],[11,"delete","","Create request builder for `DELETE` request",16,{"inputs":[{"name":"u"}],"output":{"name":"clientrequestbuilder"}}],[11,"build","","Create client request builder",16,{"inputs":[],"output":{"name":"clientrequestbuilder"}}],[11,"uri","","Get the request uri",16,{"inputs":[{"name":"self"}],"output":{"name":"uri"}}],[11,"set_uri","","Set client request uri",16,{"inputs":[{"name":"self"},{"name":"uri"}],"output":null}],[11,"method","","Get the request method",16,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"set_method","","Set http `Method` for the request",16,{"inputs":[{"name":"self"},{"name":"method"}],"output":null}],[11,"version","","Get http version for the request",16,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"set_version","","Set http `Version` for the request",16,{"inputs":[{"name":"self"},{"name":"version"}],"output":null}],[11,"headers","","Get the headers from the request",16,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"headers_mut","","Get a mutable reference to the headers",16,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"chunked","","is chunked encoding enabled",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"upgrade","","is upgrade request",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"content_encoding","","Content encoding",16,{"inputs":[{"name":"self"}],"output":{"name":"contentencoding"}}],[11,"body","","Get body os this response",16,{"inputs":[{"name":"self"}],"output":{"name":"body"}}],[11,"set_body","","Set a body",16,{"inputs":[{"name":"self"},{"name":"b"}],"output":null}],[11,"send","","Send request",16,{"inputs":[{"name":"self"}],"output":{"name":"sendrequest"}}],[11,"with_connector","","",16,{"inputs":[{"name":"self"},{"generics":["unsync","clientconnector"],"name":"addr"}],"output":{"name":"sendrequest"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"uri","","Set HTTP uri of request.",17,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"self"}}],[11,"method","","Set HTTP method of this request.",17,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"self"}}],[11,"version","","Set HTTP version of this request.",17,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"self"}}],[11,"header","","Add a header.",17,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"set_header","","Replace a header.",17,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"content_encoding","","Set content encoding.",17,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"self"}}],[11,"chunked","","Enables automatic chunked transfer encoding",17,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"upgrade","","Enable connection upgrade",17,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"content_type","","Set request's content type",17,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"self"}}],[11,"content_length","","Set content length",17,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"cookie","","Set a cookie",17,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"self"}}],[11,"del_cookie","","Remove cookie, cookie has to be cookie from `HttpRequest::cookies()` method.",17,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"self"}}],[11,"if_true","","This method calls provided closure with builder reference if value is true.",17,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"f"}],"output":{"name":"self"}}],[11,"if_some","","This method calls provided closure with builder reference if value is Some.",17,{"inputs":[{"name":"self"},{"name":"option"},{"name":"f"}],"output":{"name":"self"}}],[11,"body","","Set a body and generate `ClientRequest`.",17,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["clientrequest","httperror"],"name":"result"}}],[11,"json","","Set a json body and generate `ClientRequest`",17,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["clientrequest","error"],"name":"result"}}],[11,"finish","","Set an empty body and generate `ClientRequest`",17,{"inputs":[{"name":"self"}],"output":{"generics":["clientrequest","httperror"],"name":"result"}}],[11,"take","","This method construct new `ClientRequestBuilder`",17,{"inputs":[{"name":"self"}],"output":{"name":"clientrequestbuilder"}}],[11,"version","","Get the HTTP version of this response.",18,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"headers","","Get the headers from the response.",18,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"headers_mut","","Get a mutable reference to the headers.",18,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"status","","Get the status from the server.",18,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"set_status","","Set the `StatusCode` for this response.",18,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":null}],[11,"cookies","","Load request cookies.",18,{"inputs":[{"name":"self"}],"output":{"generics":["vec","cookieparseerror"],"name":"result"}}],[11,"cookie","","Return request cookie.",18,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["cookie"],"name":"option"}}],[11,"content_type","","Read the request content type. If request does not contain Content-Type header, empty str get returned.",18,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"mime_type","","Convert the request content type to a known mime type.",18,{"inputs":[{"name":"self"}],"output":{"generics":["mime"],"name":"option"}}],[11,"chunked","","Check if request has chunked transfer encoding",18,{"inputs":[{"name":"self"}],"output":{"generics":["bool","parseerror"],"name":"result"}}],[11,"body","","Load request body.",18,{"inputs":[{"name":"self"}],"output":{"name":"responsebody"}}],[11,"urlencoded","","Parse `application/x-www-form-urlencoded` encoded body. Return `UrlEncoded` future. It resolves to a `HashMap<String, String>` which contains decoded parameters.",18,{"inputs":[{"name":"self"}],"output":{"name":"urlencoded"}}],[11,"json","","Parse `application/json` encoded body. Return `JsonResponse<T>` future. It resolves to a `T` value.",18,{"inputs":[{"name":"self"}],"output":{"name":"jsonresponse"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"new","","Create `ResponseBody` for request.",19,{"inputs":[{"name":"clientresponse"}],"output":{"name":"self"}}],[11,"limit","","Change max size of payload. By default max size is 256Kb",19,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"poll","","",19,{"inputs":[{"name":"self"}],"output":{"generics":["bytes","payloaderror"],"name":"poll"}}],[11,"from_response","","Create `JsonResponse` for request.",20,{"inputs":[{"name":"clientresponse"}],"output":{"name":"self"}}],[11,"limit","","Change max size of payload. By default max size is 256Kb",20,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"content_type","","Set allowed content type.",20,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"poll","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["jsonpayloaderror"],"name":"poll"}}],[11,"new","","",21,{"inputs":[{"name":"clientresponse"}],"output":{"name":"urlencoded"}}],[11,"limit","","Change max size of payload. By default max size is 256Kb",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"poll","","",21,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"cause","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",12,{"inputs":[{"name":"error"}],"output":{"name":"sendrequesterror"}}],[11,"poll","","",22,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[0,"fs","actix_web","Static files support.",null,null],[3,"NamedFile","actix_web::fs","A file with an associated name; responds with the Content-Type based on the file extension.",null,null],[3,"Directory","","A directory; responds with the generated directory listing.",null,null],[3,"StaticFiles","","Static files handling",null,null],[4,"FilesystemElement","","This enum represents all filesystem elements.",null,null],[13,"File","","",23,null],[13,"Directory","","",23,null],[13,"Redirect","","",23,null],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"open","","Attempts to open a file in read-only mode.",24,{"inputs":[{"name":"p"}],"output":{"generics":["namedfile"],"name":"result"}}],[11,"file","","Returns reference to the underlying `File` object.",24,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"path","","Retrieve the path of this file.",24,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"deref","","",24,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"deref_mut","","",24,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"respond_to","","",24,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["httpresponse","error"],"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",25,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"directory"}}],[11,"respond_to","","",25,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["httpresponse","error"],"name":"result"}}],[11,"respond_to","","",23,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["httpresponse","error"],"name":"result"}}],[11,"new","","Create new `StaticFiles` instance",26,{"inputs":[{"name":"t"},{"name":"bool"}],"output":{"name":"staticfiles"}}],[11,"index_file","","Set index file",26,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"staticfiles"}}],[11,"handle","","",26,null],[0,"ws","actix_web","`WebSocket` support for Actix",null,null],[3,"WebsocketContext","actix_web::ws","Http actor execution context",null,null],[3,"WsClient","","`WebSocket` client",null,null],[3,"WsClientReader","","",null,null],[3,"WsClientWriter","","",null,null],[3,"WsStream","","Maps `Payload` stream into stream of `ws::Message` items",null,null],[4,"CloseCode","","Status code used to indicate why an endpoint is closing the `WebSocket` connection.",null,null],[13,"Normal","","Indicates a normal closure, meaning that the purpose for which the connection was established has been fulfilled.",27,null],[13,"Away","","Indicates that an endpoint is \"going away\", such as a server going down or a browser having navigated away from a page.",27,null],[13,"Protocol","","Indicates that an endpoint is terminating the connection due to a protocol error.",27,null],[13,"Unsupported","","Indicates that an endpoint is terminating the connection because it has received a type of data it cannot accept (e.g., an endpoint that understands only text data MAY send this if it receives a binary message).",27,null],[13,"Status","","Indicates that no status code was included in a closing frame. This close code makes it possible to use a single method, `on_close` to handle even cases where no close code was provided.",27,null],[13,"Abnormal","","Indicates an abnormal closure. If the abnormal closure was due to an error, this close code will not be used. Instead, the `on_error` method of the handler will be called with the error. However, if the connection is simply dropped, without an error, this close code will be sent to the handler.",27,null],[13,"Invalid","","Indicates that an endpoint is terminating the connection because it has received data within a message that was not consistent with the type of the message (e.g., non-UTF-8 [RFC3629] data within a text message).",27,null],[13,"Policy","","Indicates that an endpoint is terminating the connection because it has received a message that violates its policy.  This is a generic status code that can be returned when there is no other more suitable status code (e.g., Unsupported or Size) or if there is a need to hide specific details about the policy.",27,null],[13,"Size","","Indicates that an endpoint is terminating the connection because it has received a message that is too big for it to process.",27,null],[13,"Extension","","Indicates that an endpoint (client) is terminating the connection because it has expected the server to negotiate one or more extension, but the server didn't return them in the response message of the WebSocket handshake.  The list of extensions that are needed should be given as the reason for closing. Note that this status code is not used by the server, because it can fail the WebSocket handshake instead.",27,null],[13,"Error","","Indicates that a server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.",27,null],[13,"Restart","","Indicates that the server is restarting. A client may choose to reconnect, and if it does, it should use a randomized delay of 5-30 seconds between attempts.",27,null],[13,"Again","","Indicates that the server is overloaded and the client should either connect to a different IP (when multiple targets exist), or reconnect to the same IP when a user has performed an action.",27,null],[4,"WsClientError","","Websocket client error",null,null],[13,"InvalidUrl","","",28,null],[13,"InvalidResponseStatus","","",28,null],[13,"InvalidUpgradeHeader","","",28,null],[13,"InvalidConnectionHeader","","",28,null],[13,"InvalidChallengeResponse","","",28,null],[13,"Http","","",28,null],[13,"Url","","",28,null],[13,"ResponseParseError","","",28,null],[13,"Connector","","",28,null],[13,"Io","","",28,null],[13,"Disconnected","","",28,null],[4,"Message","","`WebSocket` Message",null,null],[13,"Text","","",29,null],[13,"Binary","","",29,null],[13,"Ping","","",29,null],[13,"Pong","","",29,null],[13,"Close","","",29,null],[13,"Closed","","",29,null],[13,"Error","","",29,null],[5,"start","","Do websocket handshake and start actor",null,{"inputs":[{"name":"httprequest"},{"name":"a"}],"output":{"generics":["httpresponse","error"],"name":"result"}}],[5,"handshake","","Prepare `WebSocket` handshake response.",null,{"inputs":[{"name":"httprequest"}],"output":{"generics":["httpresponsebuilder","wshandshakeerror"],"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"closecode"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"closecode"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"closecode"}}],[11,"into","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"from","","",27,{"inputs":[{"name":"u16"}],"output":{"name":"closecode"}}],[11,"stop","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"terminate","","",30,{"inputs":[{"name":"self"}],"output":null}],[11,"state","","",30,{"inputs":[{"name":"self"}],"output":{"name":"actorstate"}}],[11,"spawn","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"spawnhandle"}}],[11,"wait","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"cancel_future","","",30,{"inputs":[{"name":"self"},{"name":"spawnhandle"}],"output":{"name":"bool"}}],[11,"new","","",30,{"inputs":[{"name":"httprequest"},{"name":"a"}],"output":{"name":"websocketcontext"}}],[11,"from_request","","",30,{"inputs":[{"name":"httprequest"}],"output":{"name":"websocketcontext"}}],[11,"actor","","",30,{"inputs":[{"name":"self"},{"name":"a"}],"output":{"name":"websocketcontext"}}],[11,"state","","Shared application state",30,{"inputs":[{"name":"self"}],"output":{"name":"s"}}],[11,"request","","Incoming request",30,{"inputs":[{"name":"self"}],"output":{"name":"httprequest"}}],[11,"text","","Send text frame",30,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"binary","","Send binary frame",30,{"inputs":[{"name":"self"},{"name":"b"}],"output":null}],[11,"ping","","Send ping frame",30,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"pong","","Send pong frame",30,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"close","","Send close frame",30,{"inputs":[{"name":"self"},{"name":"closecode"},{"name":"str"}],"output":null}],[11,"drain","","Returns drain future",30,{"inputs":[{"name":"self"}],"output":{"name":"drain"}}],[11,"connected","","Check if connection still open",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"handle","","Handle of the running future",30,{"inputs":[{"name":"self"}],"output":{"name":"spawnhandle"}}],[11,"pack","","",30,{"inputs":[{"name":"m"},{"generics":["sender"],"name":"option"}],"output":{"name":"syncenvelope"}}],[11,"from","actix_web","",1,{"inputs":[{"name":"websocketcontext"}],"output":{"name":"body"}}],[11,"cause","actix_web::ws","",28,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",28,{"inputs":[{"name":"httperror"}],"output":{"name":"wsclienterror"}}],[11,"from","","",28,{"inputs":[{"name":"urlparseerror"}],"output":{"name":"wsclienterror"}}],[11,"from","","",28,{"inputs":[{"name":"clientconnectorerror"}],"output":{"name":"wsclienterror"}}],[11,"from","","",28,{"inputs":[{"name":"error"}],"output":{"name":"wsclienterror"}}],[11,"new","","Create new websocket connection",31,{"inputs":[{"name":"s"}],"output":{"name":"wsclient"}}],[11,"with_connector","","Create new websocket connection with custom `ClientConnector`",31,{"inputs":[{"name":"s"},{"generics":["unsync","clientconnector"],"name":"addr"}],"output":{"name":"wsclient"}}],[11,"protocols","","Set supported websocket protocols",31,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"self"}}],[11,"cookie","","Set cookie for handshake request",31,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"self"}}],[11,"origin","","Set request Origin",31,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"self"}}],[11,"header","","Set request header",31,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"connect","","Connect to websocket server and do ws handshake",31,{"inputs":[{"name":"self"}],"output":{"generics":["box","wsclienterror"],"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",32,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"text","","Send text frame",33,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"binary","","Send binary frame",33,{"inputs":[{"name":"self"},{"name":"b"}],"output":null}],[11,"ping","","Send ping frame",33,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"pong","","Send pong frame",33,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"close","","Send close frame",33,{"inputs":[{"name":"self"},{"name":"closecode"},{"name":"str"}],"output":null}],[6,"WsClientFuture","","",null,null],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"message"}],"output":{"name":"bool"}}],[11,"new","","",34,{"inputs":[{"name":"readany"}],"output":{"name":"wsstream"}}],[11,"poll","","",34,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[0,"error","actix_web","Error and Result module",null,null],[4,"UrlParseError","actix_web::error","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",35,null],[13,"IdnaError","","",35,null],[13,"InvalidPort","","",35,null],[13,"InvalidIpv4Address","","",35,null],[13,"InvalidIpv6Address","","",35,null],[13,"InvalidDomainCharacter","","",35,null],[13,"RelativeUrlWithoutBase","","",35,null],[13,"RelativeUrlWithCannotBeABaseBase","","",35,null],[13,"SetHostOnCannotBeABaseUrl","","",35,null],[13,"Overflow","","",35,null],[4,"CookieParseError","","Enum corresponding to a parsing error.",null,null],[13,"MissingPair","","The cookie did not contain a name/value pair.",36,null],[13,"EmptyName","","The cookie's name was empty.",36,null],[13,"Utf8Error","","Decoding the cookie's name or value resulted in invalid UTF-8.",36,null],[3,"Error","","General purpose actix web error",null,null],[3,"InternalError","","Helper type that can wrap any error and generate custom response.",null,null],[4,"ParseError","","A set of errors that can occur during parsing HTTP streams",null,null],[13,"Method","","An invalid `Method`, such as `GE.T`.",37,null],[13,"Uri","","An invalid `Uri`, such as `exam ple.domain`.",37,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",37,null],[13,"Header","","An invalid `Header`.",37,null],[13,"TooLarge","","A message head is too large to be reasonable.",37,null],[13,"Incomplete","","A message reached EOF, but is not complete.",37,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",37,null],[13,"Timeout","","A timeout occurred waiting for an IO event.",37,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",37,null],[13,"Utf8","","Parsing a field as string failed",37,null],[4,"PayloadError","","A set of errors that can occur during payload parsing",null,null],[13,"Incomplete","","A payload reached EOF, but is not complete.",38,null],[13,"EncodingCorrupted","","Content encoding stream corruption",38,null],[13,"Overflow","","A payload reached size limit.",38,null],[13,"UnknownLength","","A payload length is unknown.",38,null],[13,"Io","","Io error",38,null],[13,"Http2","","Http2 error",38,null],[4,"HttpRangeError","","Http range header parsing error",null,null],[13,"InvalidRange","","Returned if range is invalid.",39,null],[13,"NoOverlap","","Returned if first-byte-pos of all of the byte-range-spec values is greater than the content size. See `https://github.com/golang/go/commit/aa9b3d7`",39,null],[4,"MultipartError","","A set of errors that can occur during parsing multipart streams",null,null],[13,"NoContentType","","Content-Type header is not found",40,null],[13,"ParseContentType","","Can not parse Content-Type header",40,null],[13,"Boundary","","Multipart boundary is not found",40,null],[13,"Parse","","Error during field parsing",40,null],[13,"Payload","","Payload error",40,null],[4,"ExpectError","","Error during handling `Expect` header",null,null],[13,"Encoding","","Expect header value can not be converted to utf8",41,null],[13,"UnknownExpect","","Unknown expect value",41,null],[4,"WsHandshakeError","","Websocket handshake errors",null,null],[13,"GetMethodRequired","","Only get method is allowed",42,null],[13,"NoWebsocketUpgrade","","Upgrade header if not set to websocket",42,null],[13,"NoConnectionUpgrade","","Connection header is not set to upgrade",42,null],[13,"NoVersionHeader","","Websocket version header is not set",42,null],[13,"UnsupportedVersion","","Unsupported websocket version",42,null],[13,"BadWebsocketKey","","Websocket key is not set or wrong",42,null],[4,"UrlencodedError","","A set of errors that can occur during parsing urlencoded payloads",null,null],[13,"Chunked","","Can not decode chunked transfer encoding",43,null],[13,"Overflow","","Payload size is bigger than 256k",43,null],[13,"UnknownLength","","Payload size is now known",43,null],[13,"ContentType","","Content type error",43,null],[13,"Payload","","Payload error",43,null],[4,"JsonPayloadError","","A set of errors that can occur during parsing json payloads",null,null],[13,"Overflow","","Payload size is bigger than 256k",44,null],[13,"ContentType","","Content type error",44,null],[13,"Deserialize","","Deserialize error",44,null],[13,"Payload","","Payload error",44,null],[4,"UriSegmentError","","Errors which can occur when attempting to interpret a segment string as a valid path segment.",null,null],[13,"BadStart","","The segment started with the wrapped invalid character.",45,null],[13,"BadChar","","The segment contained the wrapped invalid character.",45,null],[13,"BadEnd","","The segment ended with the wrapped invalid character.",45,null],[4,"UrlGenerationError","","Errors which can occur when attempting to generate resource uri.",null,null],[13,"ResourceNotFound","","",46,null],[13,"NotEnoughElements","","",46,null],[13,"RouterNotAvailable","","",46,null],[13,"ParseError","","",46,null],[5,"ErrorBadRequest","","Helper function that creates wrapper of any error and generate BAD REQUEST response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorUnauthorized","","Helper function that creates wrapper of any error and generate UNAUTHORIZED response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorForbidden","","Helper function that creates wrapper of any error and generate FORBIDDEN response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorNotFound","","Helper function that creates wrapper of any error and generate NOT FOUND response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorMethodNotAllowed","","Helper function that creates wrapper of any error and generate METHOD NOT ALLOWED response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorRequestTimeout","","Helper function that creates wrapper of any error and generate REQUEST TIMEOUT response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorConflict","","Helper function that creates wrapper of any error and generate CONFLICT response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorGone","","Helper function that creates wrapper of any error and generate GONE response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorPreconditionFailed","","Helper function that creates wrapper of any error and generate PRECONDITION FAILED response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorExpectationFailed","","Helper function that creates wrapper of any error and generate EXPECTATION FAILED response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[5,"ErrorInternalServerError","","Helper function that creates wrapper of any error and generate INTERNAL SERVER ERROR response.",null,{"inputs":[{"name":"t"}],"output":{"name":"internalerror"}}],[6,"Result","","A specialized `Result` for actix web operations",null,null],[8,"ResponseError","","Error that can be converted to `HttpResponse`",null,null],[11,"error_response","","Create response for error",47,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"cause","","Returns a reference to the underlying cause of this Error.",48,{"inputs":[{"name":"self"}],"output":{"name":"responseerror"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","actix_web","",6,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","actix_web::error","",48,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"from","","",48,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"cause","","",37,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",37,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error_response","","",37,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"from","","",37,{"inputs":[{"name":"ioerror"}],"output":{"name":"parseerror"}}],[11,"from","","",37,{"inputs":[{"name":"utf8error"}],"output":{"name":"parseerror"}}],[11,"from","","",37,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"parseerror"}}],[11,"from","","",37,{"inputs":[{"name":"error"}],"output":{"name":"parseerror"}}],[11,"cause","","",38,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",38,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",38,{"inputs":[{"name":"ioerror"}],"output":{"name":"payloaderror"}}],[11,"error_response","","",36,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"cause","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",39,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"httprangeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error_response","","",39,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"from","","",39,{"inputs":[{"name":"httprangeparseerror"}],"output":{"name":"httprangeerror"}}],[11,"cause","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",40,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",40,{"inputs":[{"name":"parseerror"}],"output":{"name":"multiparterror"}}],[11,"from","","",40,{"inputs":[{"name":"payloaderror"}],"output":{"name":"multiparterror"}}],[11,"error_response","","",40,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"cause","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",41,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"expecterror"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error_response","","",41,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"cause","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",42,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"wshandshakeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error_response","","",42,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"cause","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",43,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error_response","","",43,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"from","","",43,{"inputs":[{"name":"payloaderror"}],"output":{"name":"urlencodederror"}}],[11,"cause","","",44,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",44,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error_response","","",44,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"from","","",44,{"inputs":[{"name":"payloaderror"}],"output":{"name":"jsonpayloaderror"}}],[11,"from","","",44,{"inputs":[{"name":"jsonerror"}],"output":{"name":"jsonpayloaderror"}}],[11,"cause","","",45,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",45,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"urisegmenterror"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"urisegmenterror"}],"output":{"name":"bool"}}],[11,"error_response","","",45,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"cause","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",46,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"urlgenerationerror"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"urlgenerationerror"}],"output":{"name":"bool"}}],[11,"from","","",46,{"inputs":[{"name":"urlparseerror"}],"output":{"name":"self"}}],[11,"new","","",49,{"inputs":[{"name":"t"},{"name":"statuscode"}],"output":{"name":"self"}}],[11,"backtrace","","",49,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error_response","","",49,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"respond_to","","",49,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["httpresponse","error"],"name":"result"}}],[0,"httpcodes","actix_web","Basic http responses",null,null],[3,"StaticResponse","actix_web::httpcodes","",null,null],[17,"HTTPOk","","",null,null],[17,"HTTPCreated","","",null,null],[17,"HTTPAccepted","","",null,null],[17,"HTTPNonAuthoritativeInformation","","",null,null],[17,"HTTPNoContent","","",null,null],[17,"HTTPResetContent","","",null,null],[17,"HTTPPartialContent","","",null,null],[17,"HTTPMultiStatus","","",null,null],[17,"HTTPAlreadyReported","","",null,null],[17,"HTTPMultipleChoices","","",null,null],[17,"HTTPMovedPermanenty","","",null,null],[17,"HTTPFound","","",null,null],[17,"HTTPSeeOther","","",null,null],[17,"HTTPNotModified","","",null,null],[17,"HTTPUseProxy","","",null,null],[17,"HTTPTemporaryRedirect","","",null,null],[17,"HTTPPermanentRedirect","","",null,null],[17,"HTTPBadRequest","","",null,null],[17,"HTTPUnauthorized","","",null,null],[17,"HTTPPaymentRequired","","",null,null],[17,"HTTPForbidden","","",null,null],[17,"HTTPNotFound","","",null,null],[17,"HTTPMethodNotAllowed","","",null,null],[17,"HTTPNotAcceptable","","",null,null],[17,"HTTPProxyAuthenticationRequired","","",null,null],[17,"HTTPRequestTimeout","","",null,null],[17,"HTTPConflict","","",null,null],[17,"HTTPGone","","",null,null],[17,"HTTPLengthRequired","","",null,null],[17,"HTTPPreconditionFailed","","",null,null],[17,"HTTPPayloadTooLarge","","",null,null],[17,"HTTPUriTooLong","","",null,null],[17,"HTTPUnsupportedMediaType","","",null,null],[17,"HTTPRangeNotSatisfiable","","",null,null],[17,"HTTPExpectationFailed","","",null,null],[17,"HTTPInternalServerError","","",null,null],[17,"HTTPNotImplemented","","",null,null],[17,"HTTPBadGateway","","",null,null],[17,"HTTPServiceUnavailable","","",null,null],[17,"HTTPGatewayTimeout","","",null,null],[17,"HTTPVersionNotSupported","","",null,null],[17,"HTTPVariantAlsoNegotiates","","",null,null],[17,"HTTPInsufficientStorage","","",null,null],[17,"HTTPLoopDetected","","",null,null],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"staticresponse"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"build","","",50,{"inputs":[{"name":"self"}],"output":{"name":"httpresponsebuilder"}}],[11,"with_reason","","",50,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"httpresponse"}}],[11,"with_body","","",50,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"httpresponse"}}],[11,"handle","","",50,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"httpresponse"}}],[11,"respond_to","","",50,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["httpresponse","httperror"],"name":"result"}}],[11,"from","actix_web","",6,{"inputs":[{"name":"staticresponse"}],"output":{"name":"self"}}],[11,"from","","",9,{"inputs":[{"name":"staticresponse"}],"output":{"name":"self"}}],[11,"Ok","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"Created","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"NoContent","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"MultipleChoices","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"MovedPermanenty","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"Found","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"SeeOther","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"NotModified","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"UseProxy","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"TemporaryRedirect","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"PermanentRedirect","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"BadRequest","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"NotFound","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"Unauthorized","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"PaymentRequired","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"Forbidden","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"MethodNotAllowed","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"NotAcceptable","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"ProxyAuthenticationRequired","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"RequestTimeout","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"Conflict","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"Gone","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"LengthRequired","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"PreconditionFailed","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"PayloadTooLarge","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"UriTooLong","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"ExpectationFailed","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[11,"InternalServerError","","",6,{"inputs":[],"output":{"name":"httpresponsebuilder"}}],[0,"multipart","","Multipart requests support",null,null],[3,"Multipart","actix_web::multipart","The server-side implementation of `multipart/form-data` requests.",null,null],[3,"Field","","A single field in a multipart stream",null,null],[4,"MultipartItem","","",null,null],[13,"Field","","Multipart field",51,null],[13,"Nested","","Nested multipart stream",51,null],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create multipart instance for boundary.",52,{"inputs":[{"name":"string"},{"name":"payload"}],"output":{"name":"multipart"}}],[11,"from_request","","Create multipart instance for request.",52,{"inputs":[{"name":"httprequest"}],"output":{"name":"multipart"}}],[11,"boundary","","Extract boundary info from headers.",52,{"inputs":[{"name":"headermap"}],"output":{"generics":["string","multiparterror"],"name":"result"}}],[11,"poll","","",52,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"headers","","",53,{"inputs":[{"name":"self"}],"output":{"name":"headermap"}}],[11,"content_type","","",53,{"inputs":[{"name":"self"}],"output":{"name":"mime"}}],[11,"poll","","",53,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"middleware","actix_web","Middlewares",null,null],[3,"Logger","actix_web::middleware","`Middleware` for logging request and response info to the terminal. `Logger` middleware uses standard log crate to log information. You should enable logger for actix_web package to see access log. (env_logger or similar)",null,null],[3,"DefaultHeaders","","`Middleware` for setting default response headers.",null,null],[3,"DefaultHeadersBuilder","","Structure that follows the builder pattern for building `DefaultHeaders` middleware.",null,null],[3,"Session","","The high-level interface you use to modify session data.",null,null],[3,"SessionStorage","","Session storage middleware",null,null],[3,"CookieSessionBackend","","Use signed cookies as session storage.",null,null],[3,"CookieSessionBackendBuilder","","Structure that follows the builder pattern for building `CookieSessionBackend` structs.",null,null],[4,"CookieSessionError","","Errors that can occur during handling cookie session",null,null],[13,"Overflow","","Size of the serialized session is greater than 4000 bytes.",54,null],[13,"Serialize","","Fail to serialize session.",54,null],[4,"Started","","Middleware start result",null,null],[13,"Done","","Execution completed",55,null],[13,"Response","","New http response got generated. If middleware generates response handler execution halts.",55,null],[13,"Future","","Execution completed, runs future to completion.",55,null],[4,"Response","","Middleware execution result",null,null],[13,"Done","","New http response got generated",56,null],[13,"Future","","Result is a future that resolves to a new http response",56,null],[4,"Finished","","Middleware finish result",null,null],[13,"Done","","Execution completed",57,null],[13,"Future","","Execution completed, but run future to completion",57,null],[11,"new","","Create `Logger` middleware with the specified `format`.",58,{"inputs":[{"name":"str"}],"output":{"name":"logger"}}],[11,"default","","Create `Logger` middleware with format:",58,{"inputs":[],"output":{"name":"logger"}}],[11,"start","","",58,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["started"],"name":"result"}}],[11,"finish","","",58,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"name":"finished"}}],[11,"session","actix_web","",5,{"inputs":[{"name":"self"}],"output":{"name":"session"}}],[11,"get","actix_web::middleware","Get a `value` from the session.",59,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["option"],"name":"result"}}],[11,"set","","Set a `value` from the session.",59,{"inputs":[{"name":"self"},{"name":"str"},{"name":"t"}],"output":{"name":"result"}}],[11,"remove","","Remove value from the session.",59,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"clear","","Clear the session.",59,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create session storage",60,{"inputs":[{"name":"t"}],"output":{"name":"sessionstorage"}}],[11,"start","","",60,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["started"],"name":"result"}}],[11,"response","","",60,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"generics":["response"],"name":"result"}}],[11,"cause","","",54,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",54,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Construct new `CookieSessionBackend` instance.",61,null],[11,"build","","Creates a new `CookieSessionBackendBuilder` instance from the given key.",61,null],[11,"new","","",62,null],[11,"path","","Sets the `path` field in the session cookie being built.",62,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"cookiesessionbackendbuilder"}}],[11,"name","","Sets the `name` field in the session cookie being built.",62,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"cookiesessionbackendbuilder"}}],[11,"domain","","Sets the `domain` field in the session cookie being built.",62,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"cookiesessionbackendbuilder"}}],[11,"secure","","Sets the `secure` field in the session cookie being built.",62,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"cookiesessionbackendbuilder"}}],[11,"finish","","Finishes building and returns the built `CookieSessionBackend`.",62,{"inputs":[{"name":"self"}],"output":{"name":"cookiesessionbackend"}}],[11,"build","","",63,{"inputs":[],"output":{"name":"defaultheadersbuilder"}}],[11,"response","","",63,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"generics":["response"],"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header","","Set a header.",64,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"content_type","","Set CONTENT-TYPE header if response does not contain this header.",64,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"finish","","Finishes building and returns the built `DefaultHeaders` middleware.",64,{"inputs":[{"name":"self"}],"output":{"name":"defaultheaders"}}],[0,"cors","","Cross-origin resource sharing (CORS) for Actix applications",null,null],[3,"Cors","actix_web::middleware::cors","`Middleware` for Cross-origin resource sharing support",null,null],[3,"CorsBuilder","","Structure that follows the builder pattern for building `Cors` middleware structs.",null,null],[4,"CorsError","","A set of errors that can occur during processing CORS",null,null],[13,"MissingOrigin","","The HTTP request header `Origin` is required but was not provided",65,null],[13,"BadOrigin","","The HTTP request header `Origin` could not be parsed correctly.",65,null],[13,"MissingRequestMethod","","The request header `Access-Control-Request-Method` is required but is missing",65,null],[13,"BadRequestMethod","","The request header `Access-Control-Request-Method` has an invalid value",65,null],[13,"BadRequestHeaders","","The request header `Access-Control-Request-Headers`  has an invalid value",65,null],[13,"MissingRequestHeaders","","The request header `Access-Control-Request-Headers`  is required but is missing.",65,null],[13,"OriginNotAllowed","","Origin is not allowed to make this request",65,null],[13,"MethodNotAllowed","","Requested method is not allowed",65,null],[13,"HeadersNotAllowed","","One or more headers requested are not allowed",65,null],[4,"CorsBuilderError","","A set of errors that can occur during building CORS middleware",null,null],[13,"ParseError","","",66,null],[13,"CredentialsWithWildcardOrigin","","Credentials are allowed, but the Origin is set to \"*\". This is not allowed by W3C",66,null],[4,"AllOrSome","","An enum signifying that some of type T is allowed, or `All` (everything is allowed).",null,null],[13,"All","","Everything is allowed. Usually equivalent to the \"*\" value.",67,null],[13,"Some","","Only some of `T` is allowed",67,null],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",65,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",66,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"error_response","","",65,{"inputs":[{"name":"self"}],"output":{"name":"httpresponse"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"allorsome"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"allorsome"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"allorsome"}],"output":{"name":"bool"}}],[11,"default","","",67,{"inputs":[],"output":{"name":"self"}}],[11,"is_all","","Returns whether this is an `All` variant",67,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_some","","Returns whether this is a `Some` variant",67,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_ref","","Returns &T",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"default","","",68,{"inputs":[],"output":{"name":"cors"}}],[11,"build","","",68,{"inputs":[],"output":{"name":"corsbuilder"}}],[11,"register","","This method register cors middleware with resource and adds route for OPTIONS preflight requests.",68,{"inputs":[{"name":"self"},{"name":"resource"}],"output":null}],[11,"start","","",68,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["started"],"name":"result"}}],[11,"response","","",68,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"generics":["response"],"name":"result"}}],[11,"allowed_origin","","Add an origin that are allowed to make requests. Will be verified against the `Origin` request header.",69,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"corsbuilder"}}],[11,"allowed_methods","","Set a list of methods which the allowed origins are allowed to access for requests.",69,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"corsbuilder"}}],[11,"allowed_header","","Set an allowed header",69,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"name":"corsbuilder"}}],[11,"allowed_headers","","Set a list of header field names which can be used when this resource is accessed by allowed origins.",69,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"corsbuilder"}}],[11,"expose_headers","","Set a list of headers which are safe to expose to the API of a CORS API specification. This corresponds to the `Access-Control-Expose-Headers` response header.",69,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"corsbuilder"}}],[11,"max_age","","Set a maximum time for which this CORS request maybe cached. This value is set as the `Access-Control-Max-Age` header.",69,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"corsbuilder"}}],[11,"send_wildcard","","Set a wildcard origins",69,{"inputs":[{"name":"self"}],"output":{"name":"corsbuilder"}}],[11,"supports_credentials","","Allows users to make authenticated requests",69,{"inputs":[{"name":"self"}],"output":{"name":"corsbuilder"}}],[11,"disable_vary_header","","Disable `Vary` header support.",69,{"inputs":[{"name":"self"}],"output":{"name":"corsbuilder"}}],[11,"disable_preflight","","Disable preflight request support.",69,{"inputs":[{"name":"self"}],"output":{"name":"corsbuilder"}}],[11,"finish","","Finishes building and returns the built `Cors` instance.",69,{"inputs":[{"name":"self"}],"output":{"generics":["cors","corsbuildererror"],"name":"result"}}],[8,"RequestSession","actix_web::middleware","The helper trait to obtain your session data from a request.",null,null],[10,"session","","",70,{"inputs":[{"name":"self"}],"output":{"name":"session"}}],[8,"Middleware","","Middleware definition",null,null],[11,"start","","Method is called when request is ready. It may return future, which should resolve before next middleware get called.",71,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["started"],"name":"result"}}],[11,"response","","Method is called when handler returns response, but before sending http message to peer.",71,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"generics":["response"],"name":"result"}}],[11,"finish","","Method is called after body stream get sent to peer.",71,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"httpresponse"}],"output":{"name":"finished"}}],[0,"pred","actix_web","Route match predicates",null,null],[3,"AnyPredicate","actix_web::pred","Matches if any of supplied predicate matches.",null,null],[3,"AllPredicate","","Matches if all of supplied predicate matches.",null,null],[5,"Any","","Return predicate that matches if any of supplied predicate matches.",null,{"inputs":[{"name":"p"}],"output":{"name":"anypredicate"}}],[5,"All","","Return predicate that matches if all of supplied predicate matches.",null,{"inputs":[{"name":"p"}],"output":{"name":"allpredicate"}}],[5,"Not","","Return predicate that matches if supplied predicate does not match.",null,{"inputs":[{"name":"p"}],"output":{"name":"notpredicate"}}],[5,"Get","","Predicate to match GET http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Post","","Predicate to match POST http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Put","","Predicate to match PUT http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Delete","","Predicate to match DELETE http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Head","","Predicate to match HEAD http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Options","","Predicate to match OPTIONS http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Connect","","Predicate to match CONNECT http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Patch","","Predicate to match PATCH http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Trace","","Predicate to match TRACE http method",null,{"inputs":[],"output":{"name":"methodpredicate"}}],[5,"Method","","Predicate to match specified http method",null,{"inputs":[{"name":"method"}],"output":{"name":"methodpredicate"}}],[5,"Header","","Return predicate that matches if request contains specified header and value.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"headerpredicate"}}],[8,"Predicate","","Trait defines resource route predicate. Predicate can modify request object. It is also possible to to store extra attributes on request by using `.extensions()` method.",null,null],[10,"check","","Check if request matches predicate",72,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"bool"}}],[11,"or","","Add new predicate to list of predicates to check",73,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"self"}}],[11,"check","","",73,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"bool"}}],[11,"and","","Add new predicate to list of predicates to check",74,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"self"}}],[11,"check","","",74,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"bool"}}],[0,"test","actix_web","Various helpers for Actix applications to use during testing.",null,null],[3,"TestServer","actix_web::test","The `TestServer` type.",null,null],[3,"TestApp","","Test application helper for testing request handlers.",null,null],[3,"TestRequest","","Test `HttpRequest` builder",null,null],[11,"new","","Start new test server",75,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"with_factory","","Start new test server with application factory",75,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"with_state","","Start new test server with custom application state",75,{"inputs":[{"name":"fs"},{"name":"f"}],"output":{"name":"self"}}],[11,"unused_addr","","Get firat available unused address",75,{"inputs":[],"output":{"name":"socketaddr"}}],[11,"addr","","Construct test server url",75,{"inputs":[{"name":"self"}],"output":{"name":"socketaddr"}}],[11,"url","","Construct test server url",75,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"string"}}],[11,"execute","","Execute future on current core",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"ws","","Connect to websocket server",75,{"inputs":[{"name":"self"}],"output":{"generics":["wsclienterror"],"name":"result"}}],[11,"get","","Create `GET` request",75,{"inputs":[{"name":"self"}],"output":{"name":"clientrequestbuilder"}}],[11,"post","","Create `POST` request",75,{"inputs":[{"name":"self"}],"output":{"name":"clientrequestbuilder"}}],[11,"head","","Create `HEAD` request",75,{"inputs":[{"name":"self"}],"output":{"name":"clientrequestbuilder"}}],[11,"client","","Connect to test http server",75,{"inputs":[{"name":"self"},{"name":"method"},{"name":"str"}],"output":{"name":"clientrequestbuilder"}}],[11,"drop","","",75,{"inputs":[{"name":"self"}],"output":null}],[11,"handler","","Register handler for \"/\"",76,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"handler2","","Register handler for \"/\" with resource middleware",76,{"inputs":[{"name":"self"},{"name":"h"},{"name":"m"}],"output":null}],[11,"middleware","","Register middleware",76,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"testapp"}}],[11,"into_handler","","",76,{"inputs":[{"name":"self"},{"name":"serversettings"}],"output":{"name":"httpapplication"}}],[11,"default","","",77,{"inputs":[],"output":{"name":"testrequest"}}],[11,"with_uri","","Create TestRequest and set request uri",77,{"inputs":[{"name":"str"}],"output":{"name":"testrequest"}}],[11,"with_header","","Create TestRequest and set header",77,{"inputs":[{"name":"k"},{"name":"v"}],"output":{"name":"testrequest"}}],[11,"with_state","","Start HttpRequest build process with application state",77,{"inputs":[{"name":"s"}],"output":{"name":"testrequest"}}],[11,"version","","Set HTTP version of this request",77,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"self"}}],[11,"method","","Set HTTP method of this request",77,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"self"}}],[11,"uri","","Set HTTP Uri of this request",77,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"header","","Set a header",77,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"param","","Set request path pattern parameter",77,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"self"}}],[11,"set_payload","","Set request payload",77,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"name":"self"}}],[11,"finish","","Complete request creation and generate `HttpRequest` instance",77,{"inputs":[{"name":"self"}],"output":{"name":"httprequest"}}],[11,"run","","This method generates `HttpRequest` instance and runs handler with generated request.",77,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"generics":["httpresponse"],"name":"result"}}],[11,"run_async","","This method generates `HttpRequest` instance and runs handler with generated request.",77,{"inputs":[{"name":"self"},{"name":"h"}],"output":{"generics":["httpresponse"],"name":"result"}}],[0,"payload","actix_web","Payload stream",null,null],[3,"PayloadItem","actix_web::payload","Just Bytes object",null,null],[12,"0","","",78,null],[3,"Payload","","Buffered stream of bytes chunks",null,null],[3,"ReadAny","","Get first available chunk of data",null,null],[3,"ReadExactly","","Get exact number of bytes",null,null],[3,"ReadLine","","Read until `\\n`",null,null],[3,"ReadUntil","","Read until match line",null,null],[3,"PayloadSender","","Sender part of the payload stream",null,null],[8,"PayloadWriter","","Payload writer interface.",null,null],[10,"set_error","","Set stream error.",79,{"inputs":[{"name":"self"},{"name":"payloaderror"}],"output":null}],[10,"feed_eof","","Write eof into a stream which closes reading side of a stream.",79,{"inputs":[{"name":"self"}],"output":null}],[10,"feed_data","","Feed bytes into a payload stream",79,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":null}],[10,"capacity","","Get estimated available capacity",79,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"payloaditem"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"self"},{"name":"payloaditem"}],"output":{"name":"bool"}}],[11,"deref","","",78,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"deref_mut","","",78,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create payload stream.",80,null],[11,"eof","","Indicates EOF of payload",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"len","","Length of the data in this payload",80,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Is payload empty",80,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"readany","","Get first available chunk of data.",80,{"inputs":[{"name":"self"}],"output":{"name":"readany"}}],[11,"readexactly","","Get exact number of bytes",80,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"readexactly"}}],[11,"readline","","Read until `\\n`",80,{"inputs":[{"name":"self"}],"output":{"name":"readline"}}],[11,"readuntil","","Read until match line",80,null],[11,"unread_data","","Put unused data back to payload",80,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":null}],[11,"buffer_size","","Get size of payload buffer",80,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"set_buffer_size","","Set size of payload buffer",80,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"stream","","Convert payload into compatible `HttpResponse` body stream",80,{"inputs":[{"name":"self"}],"output":{"name":"bodystream"}}],[11,"poll","","",80,{"inputs":[{"name":"self"}],"output":{"generics":["option","payloaderror"],"name":"poll"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"payload"}}],[11,"poll","","",81,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"poll"}}],[11,"poll","","",82,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",83,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",84,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"set_error","","",85,{"inputs":[{"name":"self"},{"name":"payloaderror"}],"output":null}],[11,"feed_eof","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"feed_data","","",85,{"inputs":[{"name":"self"},{"name":"bytes"}],"output":null}],[11,"capacity","","",85,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[0,"server","actix_web","Http server",null,null],[3,"HttpServer","actix_web::server","An HTTP Server",null,null],[3,"ServerSettings","","Various server settings",null,null],[3,"PauseServer","","Pause accepting incoming connections",null,null],[3,"ResumeServer","","Resume accepting incoming connections",null,null],[3,"StopServer","","Stop incoming connection processing, stop all workers and exit.",null,null],[12,"graceful","","",86,null],[4,"WriterState","","",null,null],[13,"Done","","",87,null],[13,"Pause","","",87,null],[11,"started","actix_web","",88,null],[11,"new","","Create new http server with application factory",88,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"threads","","Set number of workers to start.",88,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"backlog","","Set the maximum number of pending connections.",88,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"self"}}],[11,"keep_alive","","Set server keep-alive setting.",88,{"inputs":[{"name":"self"},{"generics":["u64"],"name":"option"}],"output":{"name":"self"}}],[11,"server_hostname","","Set server host name.",88,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"self"}}],[11,"system_exit","","Send `SystemExit` message to actix system",88,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"signals","","Set alternative address for `ProcessSignals` actor.",88,{"inputs":[{"name":"self"},{"generics":["syn","processsignals"],"name":"addr"}],"output":{"name":"self"}}],[11,"disable_signals","","Disable signal handling",88,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"shutdown_timeout","","Timeout for graceful workers shutdown.",88,{"inputs":[{"name":"self"},{"name":"u16"}],"output":{"name":"self"}}],[11,"addrs","","Get addresses of bound sockets.",88,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"vec"}}],[11,"bind","","The socket address to bind",88,{"inputs":[{"name":"self"},{"name":"s"}],"output":{"name":"result"}}],[11,"start","","Start listening for incoming connections.",88,{"inputs":[{"name":"self"}],"output":{"generics":["syn"],"name":"addr"}}],[11,"run","","Spawn new thread and start listening for incoming connections.",88,{"inputs":[{"name":"self"}],"output":null}],[11,"start_tls","","Start listening for incoming tls connections.",88,{"inputs":[{"name":"self"},{"name":"tlsacceptor"}],"output":{"generics":["addr"],"name":"result"}}],[11,"start_ssl","","Start listening for incoming tls connections.",88,{"inputs":[{"name":"self"},{"name":"sslacceptorbuilder"}],"output":{"generics":["addr"],"name":"result"}}],[11,"start_incoming","","Start listening for incoming connections from a stream.",88,{"inputs":[{"name":"self"},{"name":"s"},{"name":"bool"}],"output":{"generics":["syn"],"name":"addr"}}],[11,"handle","","",88,{"inputs":[{"name":"self"},{"name":"signal"},{"name":"context"}],"output":null}],[11,"handle","","",88,{"inputs":[{"name":"self"},{"name":"pauseserver"},{"name":"context"}],"output":null}],[11,"handle","","",88,{"inputs":[{"name":"self"},{"name":"resumeserver"},{"name":"context"}],"output":null}],[11,"handle","","",88,null],[11,"fmt","actix_web::server","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"serversettings"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"self"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection",89,{"inputs":[{"name":"self"}],"output":{"generics":["socketaddr"],"name":"option"}}],[11,"secure","","Returns true if connection is secure(https)",89,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"host","","Returns host header value",89,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[8,"HttpHandler","","Low level http request handler",null,null],[10,"handle","","Handle request",90,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["box","httprequest"],"name":"result"}}],[8,"HttpHandlerTask","","",null,null],[10,"poll","","",91,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"poll"}}],[10,"poll_io","","",91,{"inputs":[{"name":"self"},{"name":"writer"}],"output":{"generics":["bool","error"],"name":"poll"}}],[10,"disconnected","","",91,{"inputs":[{"name":"self"}],"output":null}],[8,"IntoHttpHandler","","Conversion helper trait",null,null],[16,"Handler","","The associated type which is result of conversion.",92,null],[10,"into_handler","","Convert into `HttpHandler` object.",92,null],[8,"Writer","","Stream writer",null,null],[10,"written","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"start","","",93,{"inputs":[{"name":"self"},{"name":"httpmessage"},{"name":"httpresponse"},{"name":"contentencoding"}],"output":{"generics":["writerstate"],"name":"result"}}],[10,"write","","",93,{"inputs":[{"name":"self"},{"name":"binary"}],"output":{"generics":["writerstate"],"name":"result"}}],[10,"write_eof","","",93,{"inputs":[{"name":"self"}],"output":{"generics":["writerstate"],"name":"result"}}],[10,"poll_completed","","",93,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"generics":["error"],"name":"poll"}}],[8,"IoStream","","Low-level io stream operations",null,null],[10,"shutdown","","",94,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"result"}}],[10,"set_nodelay","","",94,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[10,"set_linger","","",94,{"inputs":[{"name":"self"},{"generics":["duration"],"name":"option"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"headers","actix_web","Headers implementation",null,null],[3,"Cookie","actix_web::headers","Representation of an HTTP cookie.",null,null],[3,"CookieBuilder","","Structure that follows the builder pattern for building `Cookie` structs.",null,null],[3,"HttpRange","","HTTP Range header representation.",null,null],[12,"start","","",95,null],[12,"length","","",95,null],[4,"ConnectionType","","Represents various types of connection",null,null],[13,"Close","","Close connection after response",96,null],[13,"KeepAlive","","Keep connection alive after response",96,null],[13,"Upgrade","","Connection is upgraded to different type",96,null],[4,"ContentEncoding","","Represents supported types of content encodings",null,null],[13,"Auto","","Automatically select encoding based on encoding negotiation",97,null],[13,"Br","","A format using the Brotli algorithm",97,null],[13,"Deflate","","A format using the zlib structure with deflate algorithm",97,null],[13,"Gzip","","Gzip algorithm",97,null],[13,"Identity","","Indicates the identity function (i.e. no compression, nor modification)",97,null],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"contentencoding"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"dev","actix_web","The `actix-web` prelude for library developers",null,null],[3,"ConnectionInfo","actix_web::dev","`HttpRequest` connection information",null,null],[3,"JsonBody","","Request payload json parser that resolves to a deserialized `T` value.",null,null],[3,"Router","","Interface for application router.",null,null],[3,"Pattern","","",null,null],[3,"Params","","Route match information",null,null],[3,"UrlEncoded","","Future that resolves to a parsed urlencoded values.",null,null],[3,"RequestBody","","Future that resolves to a complete request body.",null,null],[3,"HttpResponseBuilder","","An HTTP response builder",null,null],[6,"BodyStream","","Type represent streaming body",null,null],[8,"Handler","","Trait defines object that could be registered as route handler",null,null],[16,"Result","","The type of value that handler will return.",98,null],[10,"handle","","Handle request",98,null],[8,"FromParam","","A trait to abstract the idea of creating a new instance of a type from a path parameter.",null,null],[16,"Err","","The associated error which can be returned from parsing.",99,null],[10,"from_param","","Parses a string `s` to return a value of this type.",99,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Responder","actix_web","Trait implemented by types that generate responses for clients.",null,null],[16,"Item","","The associated item which can be returned.",100,null],[16,"Error","","The associated error which can be returned.",100,null],[10,"respond_to","","Convert itself to `Reply` or `Error`.",100,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"name":"result"}}],[18,"GET","","GET",101,null],[18,"POST","","POST",101,null],[18,"PUT","","PUT",101,null],[18,"DELETE","","DELETE",101,null],[18,"HEAD","","HEAD",101,null],[18,"OPTIONS","","OPTIONS",101,null],[18,"CONNECT","","CONNECT",101,null],[18,"PATCH","","PATCH",101,null],[18,"TRACE","","TRACE",101,null],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",101,null],[11,"is_safe","","Whether a method is considered \"safe\", meaning the request is essentially read-only.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_idempotent","","Whether a method is considered \"idempotent\", meaning the request has the same result if executed multiple times.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_str","","Return a &str representation of the HTTP method",101,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_str","","",102,{"inputs":[{"name":"str"}],"output":{"generics":["statuscode","invalidstatuscode"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"partial_cmp","","",102,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",102,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"le","","",102,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"gt","","",102,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"ge","","",102,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",103,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",103,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"le","","",103,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"gt","","",103,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ge","","",103,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"cmp","","",103,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"cmp","","",102,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"try_from","","",102,{"inputs":[{"name":"u16"}],"output":{"generics":["statuscode"],"name":"result"}}],[11,"try_from","","",102,{"inputs":[{"name":"str"}],"output":{"generics":["statuscode"],"name":"result"}}],[11,"try_from","","",101,{"inputs":[{"name":"str"}],"output":{"generics":["method"],"name":"result"}}],[11,"try_from","","",102,null],[11,"try_from","","",101,{"inputs":[{"name":"method"}],"output":{"generics":["method"],"name":"result"}}],[11,"try_from","","",101,null],[11,"try_from","","",102,{"inputs":[{"name":"statuscode"}],"output":{"generics":["statuscode"],"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"statuscode"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"default","","",101,{"inputs":[],"output":{"name":"method"}}],[11,"default","","",103,{"inputs":[],"output":{"name":"version"}}],[11,"default","","",102,{"inputs":[],"output":{"name":"statuscode"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"as_ref","","",101,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"hash","","",101,null],[11,"hash","","",102,null],[11,"hash","","",103,null],[11,"fmt","actix_web::error","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","","",35,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"description","","",35,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_str","actix_web::headers","",104,{"inputs":[{"name":"str"}],"output":{"generics":["cookie","parseerror"],"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","actix_web::error","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","actix_web::headers","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","actix_web::error","",36,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"eq","actix_web::headers","",104,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"fmt","actix_web::error","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","actix_web::headers","Formats the cookie `self` as a `Set-Cookie` header value.",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from","actix_web::error","",36,{"inputs":[{"name":"utf8error"}],"output":{"name":"parseerror"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"clone","actix_web::headers","",104,{"inputs":[{"name":"self"}],"output":{"name":"cookie"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"cookiebuilder"}}],[11,"description","actix_web::error","",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","actix_web::headers","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"httprange"}}],[11,"from_u16","actix_web","Converts a u16 to a status code.",102,{"inputs":[{"name":"u16"}],"output":{"generics":["statuscode","invalidstatuscode"],"name":"result"}}],[11,"from_bytes","","Converts a &[u8] to a status code",102,null],[11,"as_u16","","Returns the `u16` corresponding to this `StatusCode`.",102,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"is_informational","","Check if status is within 100-199.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_success","","Check if status is within 200-299.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if status is within 300-399.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if status is within 400-499.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if status is within 500-599.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",102,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",102,null],[18,"PROCESSING","","102 Processing [RFC2518]",102,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",102,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",102,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",102,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",102,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",102,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",102,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",102,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",102,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",102,null],[18,"IM_USED","","226 IM Used [RFC3229]",102,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",102,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",102,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",102,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",102,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",102,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",102,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",102,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",102,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",102,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",102,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",102,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",102,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",102,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",102,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",102,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",102,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",102,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",102,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",102,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",102,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",102,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",102,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",102,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",102,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",102,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",102,null],[18,"IM_A_TEAPOT","","418 I'm a teapot [curiously not registered by IANA but RFC2324]",102,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",102,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",102,null],[18,"LOCKED","","423 Locked [RFC4918]",102,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",102,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",102,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",102,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",102,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",102,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",102,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",102,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",102,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",102,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",102,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",102,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",102,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",102,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",102,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",102,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",102,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",102,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",102,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"as_str","","Returns a &str representation of the `StatusCode`",102,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[18,"HTTP_09","","`HTTP/0.9`",103,null],[18,"HTTP_10","","`HTTP/1.0`",103,null],[18,"HTTP_11","","`HTTP/1.1`",103,null],[18,"HTTP_2","","`HTTP/2.0`",103,null],[11,"from","actix_web::dev","",106,{"inputs":[{"name":"payload"},{"name":"headermap"},{"name":"bool"}],"output":{"name":"urlencoded"}}],[11,"poll","","",106,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"from_request","","Create `RequestBody` for request.",107,{"inputs":[{"name":"httprequest"}],"output":{"name":"requestbody"}}],[11,"limit","","Change max size of payload. By default max size is 256Kb",107,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"poll","","",107,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"clone","actix_web::headers","",96,{"inputs":[{"name":"self"}],"output":{"name":"connectiontype"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"connectiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","actix_web::dev","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"version","","Set HTTP version of this response.",108,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"self"}}],[11,"header","","Set a header.",108,{"inputs":[{"name":"self"},{"name":"k"},{"name":"v"}],"output":{"name":"self"}}],[11,"reason","","Set the custom reason for the response.",108,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"content_encoding","","Set content encoding.",108,{"inputs":[{"name":"self"},{"name":"contentencoding"}],"output":{"name":"self"}}],[11,"force_close","","Force close connection, even if it is marked as keep-alive",108,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"chunked","","Enables automatic chunked transfer encoding",108,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"no_chunking","","Force disable chunked encoding",108,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"content_type","","Set response content type",108,{"inputs":[{"name":"self"},{"name":"v"}],"output":{"name":"self"}}],[11,"content_length","","Set content length",108,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"self"}}],[11,"cookie","","Set a cookie",108,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"self"}}],[11,"del_cookie","","Remove cookie, cookie has to be cookie from `HttpRequest::cookies()` method.",108,{"inputs":[{"name":"self"},{"name":"cookie"}],"output":{"name":"self"}}],[11,"if_true","","This method calls provided closure with builder reference if value is true.",108,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"f"}],"output":{"name":"self"}}],[11,"if_some","","This method calls provided closure with builder reference if value is Some.",108,{"inputs":[{"name":"self"},{"name":"option"},{"name":"f"}],"output":{"name":"self"}}],[11,"body","","Set a body and generate `HttpResponse`.",108,{"inputs":[{"name":"self"},{"name":"b"}],"output":{"generics":["httpresponse","httperror"],"name":"result"}}],[11,"json","","Set a json body and generate `HttpResponse`",108,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"generics":["httpresponse","error"],"name":"result"}}],[11,"finish","","Set an empty body and generate `HttpResponse`",108,{"inputs":[{"name":"self"}],"output":{"generics":["httpresponse","httperror"],"name":"result"}}],[11,"take","","This method construct new `HttpResponseBuilder`",108,{"inputs":[{"name":"self"}],"output":{"name":"httpresponsebuilder"}}],[11,"respond_to","","",108,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["httpresponse","httperror"],"name":"result"}}],[11,"new","","Create ConnectionInfo instance for a request.",109,{"inputs":[{"name":"httprequest"}],"output":{"name":"connectioninfo"}}],[11,"scheme","","Scheme of the request.",109,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"host","","Hostname of the request.",109,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"remote","","Remote IP of client initiated HTTP request.",109,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"from_request","","Create `JsonBody` for request.",110,{"inputs":[{"name":"httprequest"}],"output":{"name":"self"}}],[11,"limit","","Change max size of payload. By default max size is 256Kb",110,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"self"}}],[11,"content_type","","Set allowed content type.",110,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"poll","","",110,{"inputs":[{"name":"self"}],"output":{"generics":["jsonpayloaderror"],"name":"poll"}}],[11,"new","","Create new router",111,null],[11,"prefix","","Router prefix",111,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"server_settings","","Server settings",111,{"inputs":[{"name":"self"}],"output":{"name":"serversettings"}}],[11,"recognize","","Query for matched resource",111,{"inputs":[{"name":"self"},{"name":"httprequest"}],"output":{"generics":["usize"],"name":"option"}}],[11,"has_route","","Check if application contains matching route.",111,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"resource_path","","Build named resource path.",111,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u"}],"output":{"generics":["string","urlgenerationerror"],"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"router"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"pattern"}}],[11,"new","","Parse path pattern and create new `Pattern` instance.",112,{"inputs":[{"name":"str"},{"name":"str"},{"name":"str"}],"output":{"name":"self"}}],[11,"name","","Returns name of the pattern",112,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"pattern","","Returns path of the pattern",112,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"update_match_info","","Extract pattern parameters from the text",112,{"inputs":[{"name":"self"},{"name":"httprequest"},{"name":"usize"}],"output":null}],[11,"get_match_info","","Extract pattern parameters from the text",112,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["str","str"],"name":"hashmap"}}],[11,"path","","Build pattern path.",112,{"inputs":[{"name":"self"},{"generics":["str"],"name":"option"},{"name":"u"}],"output":{"generics":["string","urlgenerationerror"],"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"hash","","",112,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_empty","","Check if there are any matched patterns",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get","","Get matched parameter by name without type conversion",113,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"generics":["str"],"name":"option"}}],[11,"query","","Get matched `FromParam` compatible parameter by name.",113,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"iter","","Return iterator to items in parameter container",113,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"as_str","actix_web::error","Returns a description of this error as a string",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"is_compression","actix_web::headers","",97,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_str","","",97,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",97,{"inputs":[{"name":"str"}],"output":{"name":"contentencoding"}}],[11,"new","","Creates a new `Cookie` with the given name and value.",104,{"inputs":[{"name":"n"},{"name":"v"}],"output":{"name":"cookie"}}],[11,"named","","Creates a new `Cookie` with the given name and an empty value.",104,{"inputs":[{"name":"n"}],"output":{"name":"cookie"}}],[11,"build","","Creates a new `CookieBuilder` instance from the given key and value strings.",104,{"inputs":[{"name":"n"},{"name":"v"}],"output":{"name":"cookiebuilder"}}],[11,"parse","","Parses a `Cookie` from the given HTTP cookie header value string. Does not perform any percent-decoding.",104,{"inputs":[{"name":"s"}],"output":{"generics":["cookie","parseerror"],"name":"result"}}],[11,"parse_encoded","","Parses a `Cookie` from the given HTTP cookie header value string where the name and value fields are percent-encoded. Percent-decodes the name/value fields.",104,{"inputs":[{"name":"s"}],"output":{"generics":["cookie","parseerror"],"name":"result"}}],[11,"encoded","","Wraps `self` in an `EncodedCookie`: a cost-free wrapper around `Cookie` whose `Display` implementation percent-encodes the name and value of the wrapped `Cookie`.",104,{"inputs":[{"name":"self"}],"output":{"name":"encodedcookie"}}],[11,"into_owned","","Converts `self` into a `Cookie` with a static lifetime. This method results in at most one allocation.",104,{"inputs":[{"name":"self"}],"output":{"name":"cookie"}}],[11,"name","","Returns the name of `self`.",104,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"value","","Returns the value of `self`.",104,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"name_value","","Returns the name and value of `self` as a tuple of `(name, value)`.",104,null],[11,"http_only","","Returns whether this cookie was marked `HttpOnly` or not.",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"secure","","Returns whether this cookie was marked `Secure` or not.",104,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"same_site","","Returns the `SameSite` attribute of this cookie if one was specified.",104,{"inputs":[{"name":"self"}],"output":{"generics":["samesite"],"name":"option"}}],[11,"max_age","","Returns the specified max-age of the cookie if one was specified.",104,{"inputs":[{"name":"self"}],"output":{"generics":["duration"],"name":"option"}}],[11,"path","","Returns the `Path` of the cookie if one was specified.",104,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"domain","","Returns the `Domain` of the cookie if one was specified.",104,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"expires","","Returns the `Expires` time of the cookie if one was specified.",104,{"inputs":[{"name":"self"}],"output":{"generics":["tm"],"name":"option"}}],[11,"set_name","","Sets the name of `self` to `name`.",104,null],[11,"set_value","","Sets the value of `self` to `value`.",104,null],[11,"set_http_only","","Sets the value of `http_only` in `self` to `value`.",104,null],[11,"set_secure","","Sets the value of `secure` in `self` to `value`.",104,null],[11,"set_same_site","","Sets the value of `same_site` in `self` to `value`.",104,null],[11,"set_max_age","","Sets the value of `max_age` in `self` to `value`.",104,null],[11,"set_path","","Sets the `path` of `self` to `path`.",104,null],[11,"set_domain","","Sets the `domain` of `self` to `domain`.",104,null],[11,"set_expires","","Sets the expires field of `self` to `time`.",104,null],[11,"make_permanent","","Makes `self` a \"permanent\" cookie by extending its expiration and max age 20 years into the future.",104,null],[11,"name_raw","","Returns the name of `self` as a string slice of the raw string `self` was originally parsed from. If `self` was not originally parsed from a raw string, returns `None`.",104,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"value_raw","","Returns the value of `self` as a string slice of the raw string `self` was originally parsed from. If `self` was not originally parsed from a raw string, returns `None`.",104,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"path_raw","","Returns the `Path` of `self` as a string slice of the raw string `self` was originally parsed from. If `self` was not originally parsed from a raw string, or if `self` doesn't contain a `Path`, or if the `Path` has changed since parsing, returns `None`.",104,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"domain_raw","","Returns the `Domain` of `self` as a string slice of the raw string `self` was originally parsed from. If `self` was not originally parsed from a raw string, or if `self` doesn't contain a `Domain`, or if the `Domain` has changed since parsing, returns `None`.",104,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"new","","Creates a new `CookieBuilder` instance from the given name and value.",105,{"inputs":[{"name":"n"},{"name":"v"}],"output":{"name":"cookiebuilder"}}],[11,"expires","","Sets the `expires` field in the cookie being built.",105,{"inputs":[{"name":"self"},{"name":"tm"}],"output":{"name":"cookiebuilder"}}],[11,"max_age","","Sets the `max_age` field in the cookie being built.",105,{"inputs":[{"name":"self"},{"name":"duration"}],"output":{"name":"cookiebuilder"}}],[11,"domain","","Sets the `domain` field in the cookie being built.",105,{"inputs":[{"name":"self"},{"name":"d"}],"output":{"name":"cookiebuilder"}}],[11,"path","","Sets the `path` field in the cookie being built.",105,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"cookiebuilder"}}],[11,"secure","","Sets the `secure` field in the cookie being built.",105,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"cookiebuilder"}}],[11,"http_only","","Sets the `http_only` field in the cookie being built.",105,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"cookiebuilder"}}],[11,"same_site","","Sets the `same_site` field in the cookie being built.",105,{"inputs":[{"name":"self"},{"name":"samesite"}],"output":{"name":"cookiebuilder"}}],[11,"permanent","","Makes the cookie being built 'permanent' by extending its expiration and max age 20 years into the future.",105,{"inputs":[{"name":"self"}],"output":{"name":"cookiebuilder"}}],[11,"finish","","Finishes building and returns the built `Cookie`.",105,{"inputs":[{"name":"self"}],"output":{"name":"cookie"}}],[11,"parse","","Parses Range HTTP header string as per RFC 2616.",95,{"inputs":[{"name":"str"},{"name":"u64"}],"output":{"generics":["vec","httprangeparseerror"],"name":"result"}}]],"paths":[[3,"Json"],[4,"Body"],[4,"Binary"],[3,"Application"],[3,"HttpContext"],[3,"HttpRequest"],[3,"HttpResponse"],[3,"Route"],[3,"Resource"],[3,"Reply"],[3,"NormalizePath"],[3,"Connect"],[4,"SendRequestError"],[4,"ClientConnectorError"],[3,"ClientConnector"],[3,"Connection"],[3,"ClientRequest"],[3,"ClientRequestBuilder"],[3,"ClientResponse"],[3,"ResponseBody"],[3,"JsonResponse"],[3,"UrlEncoded"],[3,"SendRequest"],[4,"FilesystemElement"],[3,"NamedFile"],[3,"Directory"],[3,"StaticFiles"],[4,"CloseCode"],[4,"WsClientError"],[4,"Message"],[3,"WebsocketContext"],[3,"WsClient"],[3,"WsClientReader"],[3,"WsClientWriter"],[3,"WsStream"],[4,"UrlParseError"],[4,"CookieParseError"],[4,"ParseError"],[4,"PayloadError"],[4,"HttpRangeError"],[4,"MultipartError"],[4,"ExpectError"],[4,"WsHandshakeError"],[4,"UrlencodedError"],[4,"JsonPayloadError"],[4,"UriSegmentError"],[4,"UrlGenerationError"],[8,"ResponseError"],[3,"Error"],[3,"InternalError"],[3,"StaticResponse"],[4,"MultipartItem"],[3,"Multipart"],[3,"Field"],[4,"CookieSessionError"],[4,"Started"],[4,"Response"],[4,"Finished"],[3,"Logger"],[3,"Session"],[3,"SessionStorage"],[3,"CookieSessionBackend"],[3,"CookieSessionBackendBuilder"],[3,"DefaultHeaders"],[3,"DefaultHeadersBuilder"],[4,"CorsError"],[4,"CorsBuilderError"],[4,"AllOrSome"],[3,"Cors"],[3,"CorsBuilder"],[8,"RequestSession"],[8,"Middleware"],[8,"Predicate"],[3,"AnyPredicate"],[3,"AllPredicate"],[3,"TestServer"],[3,"TestApp"],[3,"TestRequest"],[3,"PayloadItem"],[8,"PayloadWriter"],[3,"Payload"],[3,"ReadAny"],[3,"ReadExactly"],[3,"ReadLine"],[3,"ReadUntil"],[3,"PayloadSender"],[3,"StopServer"],[4,"WriterState"],[3,"HttpServer"],[3,"ServerSettings"],[8,"HttpHandler"],[8,"HttpHandlerTask"],[8,"IntoHttpHandler"],[8,"Writer"],[8,"IoStream"],[3,"HttpRange"],[4,"ConnectionType"],[4,"ContentEncoding"],[8,"Handler"],[8,"FromParam"],[8,"Responder"],[3,"Method"],[3,"StatusCode"],[3,"Version"],[3,"Cookie"],[3,"CookieBuilder"],[3,"UrlEncoded"],[3,"RequestBody"],[3,"HttpResponseBuilder"],[3,"ConnectionInfo"],[3,"JsonBody"],[3,"Router"],[3,"Pattern"],[3,"Params"]]};
initSearch(searchIndex);
